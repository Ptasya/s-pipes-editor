"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _DateTimePickerDays = require("./DateTimePickerDays");

var _DateTimePickerDays2 = _interopRequireDefault(_DateTimePickerDays);

var _DateTimePickerMonths = require("./DateTimePickerMonths");

var _DateTimePickerMonths2 = _interopRequireDefault(_DateTimePickerMonths);

var _DateTimePickerYears = require("./DateTimePickerYears");

var _DateTimePickerYears2 = _interopRequireDefault(_DateTimePickerYears);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateTimePickerDate = function (_Component) {
  (0, _inherits3.default)(DateTimePickerDate, _Component);

  function DateTimePickerDate(props) {
    (0, _classCallCheck3.default)(this, DateTimePickerDate);

    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(DateTimePickerDate).call(this, props));

    _this.showMonths = function () {
      return _this.setState({
        daysDisplayed: false,
        monthsDisplayed: true
      });
    };

    _this.showYears = function () {
      return _this.setState({
        monthsDisplayed: false,
        yearsDisplayed: true
      });
    };

    _this.setViewYear = function (e) {
      _this.props.setViewYear(e.target.innerHTML);
      return _this.setState({
        yearsDisplayed: false,
        monthsDisplayed: true
      });
    };

    _this.setViewMonth = function (e) {
      _this.props.setViewMonth(e.target.innerHTML);
      return _this.setState({
        monthsDisplayed: false,
        daysDisplayed: true
      });
    };

    _this.renderDays = function () {
      if (_this.state.daysDisplayed) {
        return _react2.default.createElement(_DateTimePickerDays2.default, {
          addMonth: _this.props.addMonth,
          daysOfWeekDisabled: _this.props.daysOfWeekDisabled,
          maxDate: _this.props.maxDate,
          minDate: _this.props.minDate,
          selectedDate: _this.props.selectedDate,
          setSelectedDate: _this.props.setSelectedDate,
          showMonths: _this.showMonths,
          showToday: _this.props.showToday,
          subtractMonth: _this.props.subtractMonth,
          viewDate: _this.props.viewDate
        });
      } else {
        return null;
      }
    };

    _this.renderMonths = function () {
      if (_this.state.monthsDisplayed) {
        return _react2.default.createElement(_DateTimePickerMonths2.default, {
          addYear: _this.props.addYear,
          selectedDate: _this.props.selectedDate,
          setViewMonth: _this.setViewMonth,
          showYears: _this.showYears,
          subtractYear: _this.props.subtractYear,
          viewDate: _this.props.viewDate
        });
      } else {
        return null;
      }
    };

    _this.renderYears = function () {
      if (_this.state.yearsDisplayed) {
        return _react2.default.createElement(_DateTimePickerYears2.default, {
          addDecade: _this.props.addDecade,
          selectedDate: _this.props.selectedDate,
          setViewYear: _this.setViewYear,
          subtractDecade: _this.props.subtractDecade,
          viewDate: _this.props.viewDate
        });
      } else {
        return null;
      }
    };

    var viewModes = {
      "days": {
        daysDisplayed: true,
        monthsDisplayed: false,
        yearsDisplayed: false
      },
      "months": {
        daysDisplayed: false,
        monthsDisplayed: true,
        yearsDisplayed: false
      },
      "years": {
        daysDisplayed: false,
        monthsDisplayed: false,
        yearsDisplayed: true
      }
    };
    _this.state = viewModes[_this.props.viewMode] || viewModes[(0, _keys2.default)(viewModes)[_this.props.viewMode]] || viewModes.days;
    return _this;
  }

  (0, _createClass3.default)(DateTimePickerDate, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "datepicker" },
        this.renderDays(),
        this.renderMonths(),
        this.renderYears()
      );
    }
  }]);
  return DateTimePickerDate;
}(_react.Component);

DateTimePickerDate.propTypes = {
  subtractMonth: _react.PropTypes.func.isRequired,
  addMonth: _react.PropTypes.func.isRequired,
  viewDate: _react.PropTypes.object.isRequired,
  selectedDate: _react.PropTypes.object.isRequired,
  showToday: _react.PropTypes.bool,
  viewMode: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
  daysOfWeekDisabled: _react.PropTypes.array,
  setSelectedDate: _react.PropTypes.func.isRequired,
  subtractYear: _react.PropTypes.func.isRequired,
  addYear: _react.PropTypes.func.isRequired,
  setViewMonth: _react.PropTypes.func.isRequired,
  setViewYear: _react.PropTypes.func.isRequired,
  addDecade: _react.PropTypes.func.isRequired,
  subtractDecade: _react.PropTypes.func.isRequired,
  minDate: _react.PropTypes.object,
  maxDate: _react.PropTypes.object
};
exports.default = DateTimePickerDate;