"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactBootstrap = require("react-bootstrap");

var _DateTimePickerMinutes = require("./DateTimePickerMinutes");

var _DateTimePickerMinutes2 = _interopRequireDefault(_DateTimePickerMinutes);

var _DateTimePickerHours = require("./DateTimePickerHours");

var _DateTimePickerHours2 = _interopRequireDefault(_DateTimePickerHours);

var _DateTimePickerSeconds = require("./DateTimePickerSeconds");

var _DateTimePickerSeconds2 = _interopRequireDefault(_DateTimePickerSeconds);

var _Constants = require("./Constants.js");

var _Constants2 = _interopRequireDefault(_Constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DateTimePickerTime = function (_Component) {
    (0, _inherits3.default)(DateTimePickerTime, _Component);

    function DateTimePickerTime() {
        var _Object$getPrototypeO;

        var _temp, _this, _ret;

        (0, _classCallCheck3.default)(this, DateTimePickerTime);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_Object$getPrototypeO = (0, _getPrototypeOf2.default)(DateTimePickerTime)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
            minutesDisplayed: false,
            hoursDisplayed: false,
            secondsDisplayed: false
        }, _this.goBack = function () {
            return _this.setState({
                minutesDisplayed: false,
                hoursDisplayed: false,
                secondsDisplayed: false
            });
        }, _this.showMinutes = function () {
            return _this.setState({
                minutesDisplayed: true
            });
        }, _this.showHours = function () {
            return _this.setState({
                hoursDisplayed: true
            });
        }, _this.showSeconds = function () {
            return _this.setState({
                secondsDisplayed: true
            });
        }, _this.renderMinutes = function () {
            if (_this.state.minutesDisplayed) {
                return _react2.default.createElement(_DateTimePickerMinutes2.default, (0, _extends3.default)({}, _this.props, { onSwitch: _this.goBack }));
            } else {
                return null;
            }
        }, _this.renderHours = function () {
            if (_this.state.hoursDisplayed) {
                return _react2.default.createElement(_DateTimePickerHours2.default, (0, _extends3.default)({}, _this.props, { onSwitch: _this.goBack }));
            } else {
                return null;
            }
        }, _this.renderSeconds = function () {
            if (_this.state.secondsDisplayed) {
                return _react2.default.createElement(_DateTimePickerSeconds2.default, (0, _extends3.default)({}, _this.props, { onSwitch: _this.goBack }));
            } else {
                return null;
            }
        }, _this.renderPicker = function () {
            if (!_this.state.minutesDisplayed && !_this.state.hoursDisplayed && !_this.state.secondsDisplayed) {
                return _react2.default.createElement(
                    "div",
                    { className: "timepicker-picker" },
                    _react2.default.createElement(
                        "table",
                        { className: "table-condensed" },
                        _react2.default.createElement(
                            "tbody",
                            null,
                            _react2.default.createElement(
                                "tr",
                                null,
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.addHour },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, { glyph: "chevron-up" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" }),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.addMinute },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, {
                                            glyph: "chevron-up" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" }),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.addSecond },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, {
                                            glyph: "chevron-up" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" })
                            ),
                            _react2.default.createElement(
                                "tr",
                                null,
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "span",
                                        { className: "timepicker-hour",
                                            onClick: _this.showHours },
                                        _this.props.selectedDate.format("H")
                                    )
                                ),
                                _react2.default.createElement(
                                    "td",
                                    { className: "separator" },
                                    ":"
                                ),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "span",
                                        { className: "timepicker-minute",
                                            onClick: _this.showMinutes },
                                        _this.props.selectedDate.format("mm")
                                    )
                                ),
                                _react2.default.createElement(
                                    "td",
                                    { className: "separator" },
                                    ":"
                                ),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "span",
                                        { className: "timepicker-second",
                                            onClick: _this.showSeconds },
                                        _this.props.selectedDate.format("ss")
                                    )
                                )
                            ),
                            _react2.default.createElement(
                                "tr",
                                null,
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.subtractHour },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, {
                                            glyph: "chevron-down" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" }),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.subtractMinute },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, {
                                            glyph: "chevron-down" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" }),
                                _react2.default.createElement(
                                    "td",
                                    null,
                                    _react2.default.createElement(
                                        "a",
                                        { className: "btn", onClick: _this.props.subtractSecond },
                                        _react2.default.createElement(_reactBootstrap.Glyphicon, {
                                            glyph: "chevron-down" })
                                    )
                                ),
                                _react2.default.createElement("td", { className: "separator" })
                            )
                        )
                    )
                );
            } else {
                return "";
            }
        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
    }

    (0, _createClass3.default)(DateTimePickerTime, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "div",
                { className: "timepicker" },
                this.renderPicker(),
                this.renderHours(),
                this.renderMinutes(),
                this.renderSeconds()
            );
        }
    }]);
    return DateTimePickerTime;
}(_react.Component);

DateTimePickerTime.propTypes = {
    setSelectedHour: _react.PropTypes.func.isRequired,
    setSelectedMinute: _react.PropTypes.func.isRequired,
    setSelectedSecond: _react.PropTypes.func.isRequired,
    subtractHour: _react.PropTypes.func.isRequired,
    addHour: _react.PropTypes.func.isRequired,
    subtractMinute: _react.PropTypes.func.isRequired,
    addMinute: _react.PropTypes.func.isRequired,
    subtractSecond: _react.PropTypes.func.isRequired,
    addSecond: _react.PropTypes.func.isRequired,
    viewDate: _react.PropTypes.object.isRequired,
    selectedDate: _react.PropTypes.object.isRequired,
    togglePeriod: _react.PropTypes.func.isRequired,
    mode: _react.PropTypes.oneOf([_Constants2.default.MODE_DATE, _Constants2.default.MODE_DATETIME, _Constants2.default.MODE_TIME])
};
exports.default = DateTimePickerTime;


module.exports = DateTimePickerTime;