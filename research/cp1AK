5. Product functions (high level summary) (AK)
Main functions of SPED can be described by CRUD model: graphs that represent pipelines can be created, edited, removed, saved, loaded and executed (more details in section 13).
 


6. User types (+ description) (AK)

SPEd defines two group of users:
* Unauthorized: users that did not register or registered, but not authorized users. They have permisions to create new pipelines, edit and execute them, but unauthorized users can not save created pipelines or load stored pipelines. 
* Authorized: registered users with confirmed account. They can not only see, create and edit pipelines, but also save created or edited pipelines and load them for next editions or execution.
The difference between UI for these groups is in missing upper left panel with buttons "Save graph" and "Load graph" (more in section ...)

10. UX, web interface description (AK)

The main window consists of two parts: left panel and space for editing garphs (pic.1). Left panel contains elements for authorization, savind and loading graph and list of available types of nodes that can be used in graph. At the graph space user can see active graph (preloaded or created), edit it (move nodes, draw edges etc.). On double click on node appear popup with forms generated by this node (pic.2). 

12. Communication interfaces (web browser + protocols (HTTP) + security/encription) (AK)
Communication between backend and frontend proceeds via messages JSON-LD format and REST API. All communications go through unsecured HTTP protocol, but on the backend side there is used SpringSecurity built-in encryption.



13. System features (OVERALL FUNC) (AK)
As it was mentioned before, there are 4 main functions in SPEd:
 * See pipelines - users can fid out from which modules consist pipelines, which attributes has each module, in what consequence are modules connected, what forms they generate.
 * Create form (execute pipeline) - new pipelines can be easily created with the simple and user-friendly constructor. User just have to create new nodes and connect them with edges. Voila!
 * Save/load pipelines - SPEd allows not only creatind new pipelines, but also saving created pipelines as graphs and load them back. Pipelines are stored in ontologic form.  
 * Alter pipelines - as the system consisting of modules, pipeline can be modified by adding or deleting modules with different attributes, changing their sequence (adding/removing ancestors and children). 


16. Glossary (AK)
*SPEd - Semantic Pipeline Ediror
*JOPA - Java Ontology Persistent API
